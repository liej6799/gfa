/*
 * gfa_web API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct VoloAbpHttpModelingParameterApiDescriptionModel {
    #[serde(rename = "nameOnMethod", skip_serializing_if = "Option::is_none")]
    pub name_on_method: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "jsonName", skip_serializing_if = "Option::is_none")]
    pub json_name: Option<String>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<String>,
    #[serde(rename = "typeSimple", skip_serializing_if = "Option::is_none")]
    pub type_simple: Option<String>,
    #[serde(rename = "isOptional", skip_serializing_if = "Option::is_none")]
    pub is_optional: Option<bool>,
    #[serde(rename = "defaultValue", skip_serializing_if = "Option::is_none")]
    pub default_value: Option<serde_json::Value>,
    #[serde(rename = "constraintTypes", skip_serializing_if = "Option::is_none")]
    pub constraint_types: Option<Vec<String>>,
    #[serde(rename = "bindingSourceId", skip_serializing_if = "Option::is_none")]
    pub binding_source_id: Option<String>,
    #[serde(rename = "descriptorName", skip_serializing_if = "Option::is_none")]
    pub descriptor_name: Option<String>,
}

impl VoloAbpHttpModelingParameterApiDescriptionModel {
    pub fn new() -> VoloAbpHttpModelingParameterApiDescriptionModel {
        VoloAbpHttpModelingParameterApiDescriptionModel {
            name_on_method: None,
            name: None,
            json_name: None,
            _type: None,
            type_simple: None,
            is_optional: None,
            default_value: None,
            constraint_types: None,
            binding_source_id: None,
            descriptor_name: None,
        }
    }
}


